/*
 * TwActionDialog.java
 * Author  Winston Prakash
 */
package com.nayaware.twproto.ui;

import com.nayaware.twproto.events.*;

import javax.swing.*;
import java.util.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;

public class TwActionDialog extends javax.swing.JDialog {

	HashMap parameters;

	public static final int START_BUTTON = 1;
	public static final int STOP_BUTTON = 2;
	public static final int CLOSE_BUTTON = 3;

	TwActionDialogListener twActionDialogListener = null;

	/** Creates new form TwActionDialog */
	public TwActionDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		userPanel = new javax.swing.JPanel();
		outputPanel = new javax.swing.JPanel();
		chkShowOutput = new javax.swing.JCheckBox();
		scrollPane = new javax.swing.JScrollPane();
		txtOutput = new javax.swing.JTextArea();
		controlPanel = new javax.swing.JPanel();
		buttonPanel = new javax.swing.JPanel();
		startButton = new javax.swing.JButton();
		stopButton = new javax.swing.JButton();
		closeButton = new javax.swing.JButton();
		logButton = new javax.swing.JButton();
		helpButton = new javax.swing.JButton();
		footerPanel = new javax.swing.JPanel();
		progressBar = new javax.swing.JProgressBar();
		statusMsg = new javax.swing.JLabel();

		setTitle("Teamware: Action Dialog");
		setName("twActionDialog");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				closeDialog(evt);
			}
		});

		userPanel.setLayout(new java.awt.BorderLayout());

		userPanel.setPreferredSize(new java.awt.Dimension(200, 100));
		userPanel.setMinimumSize(new java.awt.Dimension(20, 20));
		getContentPane().add(userPanel, java.awt.BorderLayout.NORTH);

		outputPanel.setLayout(new java.awt.BorderLayout());

		outputPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(5, 5, 5, 5)));
		chkShowOutput.setText("Show Output");
		chkShowOutput.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				chkShowOutputItemStateChanged(evt);
			}
		});

		outputPanel.add(chkShowOutput, java.awt.BorderLayout.NORTH);

		txtOutput.setColumns(30);
		txtOutput.setRows(10);
		scrollPane.setViewportView(txtOutput);

		outputPanel.add(scrollPane, java.awt.BorderLayout.CENTER);

		getContentPane().add(outputPanel, java.awt.BorderLayout.CENTER);

		controlPanel.setLayout(new java.awt.BorderLayout());

		controlPanel.setPreferredSize(new java.awt.Dimension(340, 65));
		controlPanel.setMinimumSize(new java.awt.Dimension(120, 120));
		buttonPanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints1;

		buttonPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(5, 5, 5, 5)));
		buttonPanel.setPreferredSize(new java.awt.Dimension(400, 60));
		startButton.setText("Start");
		startButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				startButtonActionPerformed(evt);
			}
		});

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		buttonPanel.add(startButton, gridBagConstraints1);

		stopButton.setText("Stop");
		stopButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				stopButtonActionPerformed(evt);
			}
		});

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		buttonPanel.add(stopButton, gridBagConstraints1);

		closeButton.setText("Close");
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		buttonPanel.add(closeButton, gridBagConstraints1);

		logButton.setText(" Log");
		logButton.setEnabled(false);
		logButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				logButtonActionPerformed(evt);
			}
		});

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		buttonPanel.add(logButton, gridBagConstraints1);

		helpButton.setText("Help");
		helpButton.setEnabled(false);
		helpButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				helpButtonActionPerformed(evt);
			}
		});

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		buttonPanel.add(helpButton, gridBagConstraints1);

		controlPanel.add(buttonPanel, java.awt.BorderLayout.CENTER);

		footerPanel.setLayout(new java.awt.GridLayout(1, 0, 1, 0));

		footerPanel.setPreferredSize(new java.awt.Dimension(452, 25));
		footerPanel.setMinimumSize(new java.awt.Dimension(362, 25));
		progressBar.setBorder(new javax.swing.border.BevelBorder(
				javax.swing.border.BevelBorder.LOWERED));
		progressBar.setStringPainted(true);
		footerPanel.add(progressBar);

		statusMsg.setBorder(new javax.swing.border.BevelBorder(
				javax.swing.border.BevelBorder.LOWERED));
		footerPanel.add(statusMsg);

		controlPanel.add(footerPanel, java.awt.BorderLayout.SOUTH);

		getContentPane().add(controlPanel, java.awt.BorderLayout.SOUTH);

		pack();
	}// GEN-END:initComponents

	private void chkShowOutputItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_chkShowOutputItemStateChanged
		// Add your handling code here:
		switch (evt.getStateChange()) {
		case java.awt.event.ItemEvent.SELECTED:
			scrollPane.setVisible(true);
			pack();
			break;
		case java.awt.event.ItemEvent.DESELECTED:
			scrollPane.setVisible(false);
			pack();
			break;
		}
	}// GEN-LAST:event_chkShowOutputItemStateChanged

	private void logButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_logButtonActionPerformed
		// Add your handling code here:
		fireShowActionHelp(new TwActionDialogEvent());
	}// GEN-LAST:event_logButtonActionPerformed

	private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_helpButtonActionPerformed
		// Add your handling code here:
		fireShowActionHelp(new TwActionDialogEvent());
	}// GEN-LAST:event_helpButtonActionPerformed

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_closeButtonActionPerformed
		// Add your handling code here:
		fireCloseActionDialog(new TwActionDialogEvent());
	}// GEN-LAST:event_closeButtonActionPerformed

	private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_stopButtonActionPerformed
		// Add your handling code here:
		fireStopAction(new TwActionDialogEvent());
	}// GEN-LAST:event_stopButtonActionPerformed

	private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_startButtonActionPerformed
		// Add your handling code here:
		fireStartAction(new TwActionDialogEvent());
	}// GEN-LAST:event_startButtonActionPerformed

	/**
	 * Enable/Disable the button in the button Panel
	 */
	public void enableButton(int btnNumber, boolean enable) {
		switch (btnNumber) {
		case START_BUTTON:
			startButton.setEnabled(enable);
			break;
		case STOP_BUTTON:
			stopButton.setEnabled(enable);
			break;
		case CLOSE_BUTTON:
			closeButton.setEnabled(enable);
			break;
		}
	}

	/**
	 * Set the Action Dialog Listener (usually TwAction)
	 */
	public void setActionDialogListener(TwActionDialogListener listener) {
		twActionDialogListener = listener;
	}

	/**
	 * Set the User panel. Here is where the Panel corresponding to particular
	 * TwActions are set.
	 */
	public void setUserPanel(JPanel uPanel) {
		getContentPane().remove(userPanel);
		userPanel = uPanel;
		getContentPane().add(userPanel, java.awt.BorderLayout.NORTH);
	}

	/*
	 * public void setUserPanel(TwTransactionPanel trPanel) {
	 * getContentPane().remove(userPanel); trPanel.setParent(this); userPanel =
	 * trPanel; getContentPane().add(userPanel, java.awt.BorderLayout.NORTH); }
	 */

	/**
	 * Set the User panel Values. Called before the dialog is displayed Need to
	 * be overriden by the Dialog owner (TwAction)
	 */
	public void setUserPanelValues() {
	}

	/**
	 * Set TwAction Specific button Panel. This overrides the default button
	 * Panel
	 */
	public void setButtonPanel(JPanel bPanel) {
		buttonPanel = bPanel;
	}

	/**
	 * Set start button Name depending on the TwAction. e.g TwBringoverAction
	 * can set this to "Bringover"
	 */
	public void setStartButtonName(String name) {
		startButton.setText(name);
	}

	/**
	 * Set Progress Bar Maximum value
	 */
	public void setProgressBarMaxValue(int val) {
		progressBar.setMaximum(val);
	}

	/**
	 * Set the Progress Bar Minimum value
	 */
	public void setProgressBarMinValue(int val) {
		progressBar.setMinimum(val);
	}

	/**
	 * Set Progress Bar value
	 */
	public void setProgressBarValue(int val) {
		progressBar.setValue(val);
	}

	/**
	 * Set the status message
	 */
	public void setStatusMsg(String msg) {
		statusMsg.setText(msg);
	}

	/**
	 * Set whether the output should be displayed or not
	 */
	public void viewOutput(boolean show) {
		chkShowOutput.setSelected(true);
		scrollPane.setVisible(true);
		pack();
	}

	/**
	 * Set the parameter (key value pair).They are stored in a Hashmap This is
	 * for passing parameters that should be displayed on the user panel
	 * componets. Later they may be retrived for transaction
	 */
	public void setParameter(Object parKey, Object parValue) {
	}

	/**
	 * Set the parameters (key value pairs)
	 */
	public void setParameters(Object[] parKey, Object[] parValue) {
	}

	/**
	 * Set the parameters as HashMap
	 */
	public void setParameters(HashMap keyValPair) {
	}

	/**
	 * Get the parameter value for the particular key
	 */
	public Object getParameter(Object parKey) {
		return parameters.get(parKey);
	}

	/**
	 * Get all the keys as a set for all the parameter values
	 */
	public Set getKeySet() {
		return parameters.keySet();
	}

	/**
	 * Get all the keys,value pairs as Hashmap
	 */
	public HashMap getParameters() {
		return parameters;
	}

	/**
	 * Append the string to the Output text area. Scrolls to the last position
	 * so that the appended string is visible.
	 */
	public void appendOutput(String output) {
		txtOutput.append(output);
		txtOutput.setCaretPosition(txtOutput.getText().lastIndexOf('\n') + 1);
	}

	/**
	 * Clear the output area before starting a transaction
	 */
	public void clearOutput() {
		txtOutput.setText("");
	}

	/**
	 * Fire the event start Action that will be listened by the
	 * TwActionDialogListener
	 */
	public void fireStartAction(TwActionDialogEvent evt) {
		if (twActionDialogListener == null) {
			return;
		} else {
			twActionDialogListener.startAction(evt);
		}
	}

	/**
	 * Fire the event stop Action that will be listened by the
	 * TwActionDialogListener
	 */
	public void fireStopAction(TwActionDialogEvent evt) {
		if (twActionDialogListener == null) {
			return;
		} else {
			// Set the pointer to hour glass
			twActionDialogListener.stopAction(evt);
		}
	}

	/**
	 * Fire the event close Action Dialog that will be listened by the
	 * TwActionDialogListener
	 */
	public void fireCloseActionDialog(TwActionDialogEvent evt) {
		if (twActionDialogListener == null) {
			return;
		} else {
			twActionDialogListener.closeActionDialog(evt);
		}
	}

	/**
	 * Fire the event show Action Help that will be listened by the
	 * TwActionDialogListener
	 */
	public void fireShowActionHelp(TwActionDialogEvent evt) {
		if (twActionDialogListener == null) {
			return;
		} else {
			twActionDialogListener.showActionHelp(evt);
		}
	}

	/**
	 * Fire the event show session log that will be listened by the
	 * TwActionDialogListener
	 */
	public void fireShowSessionLog(TwActionDialogEvent evt) {
		if (twActionDialogListener == null) {
			return;
		} else {
			twActionDialogListener.showSessionLog(evt);
		}
	}

	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_closeDialog
		setVisible(false);
		dispose();
	}// GEN-LAST:event_closeDialog

	/**
	 * show the dialog
	 */
	public void show() {
		startButton.setEnabled(true);
		stopButton.setEnabled(false);
		closeButton.setEnabled(true);
		scrollPane.setVisible(false);

		pack();
		super.show();
	}

	public void pack() {
		super.pack();
		Component parent = getParent();
		Dimension dlgDim = getSize();
		Dimension frameDim = new Dimension(0, 0);
		if (parent != null)
			frameDim = parent.getSize();
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		Point loc = new Point(screenSize.width / 2, screenSize.height / 2);
		loc.translate((frameDim.width - dlgDim.width) / 2,
				(frameDim.height - dlgDim.height) / 2);
		loc.x = Math.max(0, Math.min(loc.x, screenSize.width - dlgDim.width));
		loc.y = Math.max(0, Math.min(loc.y, screenSize.height - dlgDim.height));
		setLocation(loc.x, loc.y);
	}

	public void close() {
		setVisible(false);
		dispose();
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {

		TwActionDialog dialog = new TwActionDialog(new javax.swing.JFrame(),
				true);
		dialog.pack();
		dialog.show();
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel userPanel;
	private javax.swing.JPanel outputPanel;
	private javax.swing.JCheckBox chkShowOutput;
	private javax.swing.JScrollPane scrollPane;
	private javax.swing.JTextArea txtOutput;
	private javax.swing.JPanel controlPanel;
	private javax.swing.JPanel buttonPanel;
	private javax.swing.JButton startButton;
	private javax.swing.JButton stopButton;
	private javax.swing.JButton closeButton;
	private javax.swing.JButton logButton;
	private javax.swing.JButton helpButton;
	private javax.swing.JPanel footerPanel;
	private javax.swing.JProgressBar progressBar;
	private javax.swing.JLabel statusMsg;
	// End of variables declaration//GEN-END:variables

}
