/*
 * TwTransactionPanel.java
 * Author:  Winston Prakash
 */

package com.nayaware.twproto.ui;

import javax.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.tree.*;

import org.openide.explorer.*;
import org.openide.explorer.view.*;
import org.openide.nodes.*;

import com.nayaware.twproto.dataobjects.*;
import com.nayaware.twproto.nodes.*;

public class TwTransactionPanel extends javax.swing.JPanel {

	protected TwWorkspace child = null;
	protected TwWorkspace parent = null;

	public static final int BRINGOVER_UPDATE = 0;
	public static final int BRINGOVER_CREATE = 1;
	public static final int PUTBACK = 3;

	protected static final int ENTIRE_WORKSPACE = 4;
	protected static final int SELECTED_FILES = 5;

	protected JDialog parentDialog = null;
	protected int transactionType = BRINGOVER_UPDATE;
	protected int selectionType = BRINGOVER_UPDATE;

	protected TwWorkspaceDirNode wsDirNode = null;

	TwCheckBoxTreeView chkTreeView = new TwCheckBoxTreeView();

	/** Creates new form TwBringoverPanel */
	public TwTransactionPanel(int type) {
		transactionType = type;
		initComponents();
		entireWsRB.setSelected(true);
		loadListButton.setVisible(false);
		saveListButton.setVisible(false);
	}

	public void setWorkspace(TwWorkspace ws) {
		switch (transactionType) {
		case BRINGOVER_UPDATE:
			txtChild.setText(ws.getPath());
			if (ws.getParent() != null)
				txtParent.setText(ws.getParent().getPath());
			bringoverCheckbox.setVisible(false);
			showDirectorySelection(false);
			wsDirNode = new TwWorkspaceDirNode(ws, ws.getParent().getPath());
			break;
		case BRINGOVER_CREATE:
			txtParent.setText(ws.getPath());
			wsDirNode = new TwWorkspaceDirNode(ws, ws.getParent().getPath());
			break;
		case PUTBACK:
			txtChild.setText(ws.getPath());
			if (ws.getParent() != null)
				txtParent.setText(ws.getParent().getPath());
			showDirectorySelection(false);
			bringoverCheckbox.setVisible(false);
			wsDirNode = new TwWorkspaceDirNode(ws, ws.getPath());
			btnBrowseChild.setVisible(false);
		}
		ExplorerPanel expPanel = new ExplorerPanel();
		expPanel.setLayout(new BorderLayout());
		expPanel.add(chkTreeView, BorderLayout.CENTER);
		if (wsDirNode != null)
			expPanel.getExplorerManager().setRootContext(wsDirNode);
		treeScrollPane.setViewportView(expPanel);
	}

	public String getParentWorkspace() {
		return txtParent.getText();
	}

	public String getChildWorkspace() {
		return txtChild.getText();
	}

	public String getSelectedDirectory() {
		return txtDir.getText();
	}

	public String getSelection() {
		switch (selectionType) {
		case ENTIRE_WORKSPACE:
			return wsDirNode.getPath();
		case SELECTED_FILES:
			String selection = "";
			Vector checkedNodes = chkTreeView.getSelection();
			for (int i = 0; i < checkedNodes.size(); i++) {
				selection = selection + (String) checkedNodes.get(i) + " ";
			}
			return selection;
		}
		return "";
	}

	public void showDirectorySelection(boolean flag) {
		lblDir.setVisible(flag);
		txtDir.setVisible(flag);
		btnBrowseDir.setVisible(flag);
	}

	public void showBringoverCheckBox(boolean flag) {
		bringoverCheckbox.setVisible(flag);
		selectionTabbedPane.setVisible(!flag);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		listButtonGroup = new javax.swing.ButtonGroup();
		outputModeButtongroup = new javax.swing.ButtonGroup();
		buttonGroup3 = new javax.swing.ButtonGroup();
		workspacePanel = new javax.swing.JPanel();
		lblParent = new javax.swing.JLabel();
		txtParent = new javax.swing.JTextField();
		btnBrowseParent = new javax.swing.JButton();
		lblChild = new javax.swing.JLabel();
		txtChild = new javax.swing.JTextField();
		btnBrowseChild = new javax.swing.JButton();
		lblDir = new javax.swing.JLabel();
		txtDir = new javax.swing.JTextField();
		btnBrowseDir = new javax.swing.JButton();
		bringoverCheckbox = new javax.swing.JCheckBox();
		selectionTabbedPane = new javax.swing.JTabbedPane();
		fileDirsPanel = new javax.swing.JPanel();
		selectionTypePanel = new javax.swing.JPanel();
		listLabel = new javax.swing.JLabel();
		entireWsRB = new javax.swing.JRadioButton();
		selectedFilesRB = new javax.swing.JRadioButton();
		fileListPanel = new javax.swing.JPanel();
		treeScrollPane = new javax.swing.JScrollPane();
		saveListButton = new javax.swing.JButton();
		loadListButton = new javax.swing.JButton();
		showSelectedCB = new javax.swing.JCheckBox();
		useListCB = new javax.swing.JCheckBox();
		commentPanel = new javax.swing.JPanel();
		commentTextArea = new javax.swing.JTextArea();
		commentLabel = new javax.swing.JLabel();
		optionsPanel = new javax.swing.JPanel();
		leftPanel = new javax.swing.JPanel();
		optonsLabel = new javax.swing.JLabel();
		skipBakCB = new javax.swing.JCheckBox();
		skipGetsCB = new javax.swing.JCheckBox();
		treatConfCB = new javax.swing.JCheckBox();
		outputModeLabel = new javax.swing.JLabel();
		normalOutRB = new javax.swing.JRadioButton();
		verbodeOutRB = new javax.swing.JRadioButton();
		quietOutRB = new javax.swing.JRadioButton();
		deltaInfoCB = new javax.swing.JCheckBox();
		rightPanel = new javax.swing.JPanel();

		setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints1;

		setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5,
				5, 5)));
		workspacePanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints2;

		workspacePanel.setBorder(new javax.swing.border.EtchedBorder());
		lblParent.setText("Parent");
		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 0;
		gridBagConstraints2.gridy = 0;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(3, 5, 0, 0);
		gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
		workspacePanel.add(lblParent, gridBagConstraints2);

		txtParent.setPreferredSize(new java.awt.Dimension(400, 21));
		txtParent.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtParentActionPerformed(evt);
			}
		});

		txtParent.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				txtParentFocusLost(evt);
			}
		});

		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 1;
		gridBagConstraints2.gridy = 0;
		gridBagConstraints2.gridwidth = 6;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(4, 2, 0, 0);
		workspacePanel.add(txtParent, gridBagConstraints2);

		btnBrowseParent.setText("Browse");
		btnBrowseParent.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnBrowseParentActionPerformed(evt);
			}
		});

		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 7;
		gridBagConstraints2.gridy = 0;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(3, 2, 0, 0);
		workspacePanel.add(btnBrowseParent, gridBagConstraints2);

		lblChild.setText("Child");
		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 0;
		gridBagConstraints2.gridy = 1;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(0, 5, 0, 0);
		gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
		workspacePanel.add(lblChild, gridBagConstraints2);

		txtChild.setPreferredSize(new java.awt.Dimension(100, 21));
		txtChild.setMinimumSize(new java.awt.Dimension(250, 21));
		txtChild.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtChildActionPerformed(evt);
			}
		});

		txtChild.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				txtChildFocusLost(evt);
			}
		});

		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 1;
		gridBagConstraints2.gridy = 1;
		gridBagConstraints2.gridwidth = 6;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(0, 2, 0, 0);
		workspacePanel.add(txtChild, gridBagConstraints2);

		btnBrowseChild.setText("Browse");
		btnBrowseChild.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnBrowseChildActionPerformed(evt);
			}
		});

		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 7;
		gridBagConstraints2.gridy = 1;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(0, 2, 0, 0);
		workspacePanel.add(btnBrowseChild, gridBagConstraints2);

		lblDir.setText("Directory");
		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 0;
		gridBagConstraints2.gridy = 2;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(0, 5, 0, 0);
		gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
		workspacePanel.add(lblDir, gridBagConstraints2);

		txtDir.setPreferredSize(new java.awt.Dimension(100, 21));
		txtDir.setMinimumSize(new java.awt.Dimension(250, 21));
		txtDir.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtDirActionPerformed(evt);
			}
		});

		txtDir.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				txtDirFocusLost(evt);
			}
		});

		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 1;
		gridBagConstraints2.gridy = 2;
		gridBagConstraints2.gridwidth = 6;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(0, 2, 0, 0);
		workspacePanel.add(txtDir, gridBagConstraints2);

		btnBrowseDir.setText("Browse");
		btnBrowseDir.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnBrowseDirActionPerformed(evt);
			}
		});

		gridBagConstraints2 = new java.awt.GridBagConstraints();
		gridBagConstraints2.gridx = 7;
		gridBagConstraints2.gridy = 2;
		gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints2.insets = new java.awt.Insets(0, 2, 0, 0);
		workspacePanel.add(btnBrowseDir, gridBagConstraints2);

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		gridBagConstraints1.gridx = 0;
		gridBagConstraints1.gridy = 0;
		gridBagConstraints1.gridwidth = 8;
		gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints1.ipadx = 10;
		gridBagConstraints1.ipady = 10;
		gridBagConstraints1.insets = new java.awt.Insets(0, 1, 0, 1);
		gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
		add(workspacePanel, gridBagConstraints1);

		bringoverCheckbox.setSelected(true);
		bringoverCheckbox.setText("Perform Bringover");
		bringoverCheckbox
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						bringoverCheckboxActionPerformed(evt);
					}
				});

		bringoverCheckbox.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				bringoverCheckboxItemStateChanged(evt);
			}
		});

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		gridBagConstraints1.gridx = 0;
		gridBagConstraints1.gridy = 1;
		gridBagConstraints1.gridwidth = 8;
		gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints1.insets = new java.awt.Insets(10, 0, 0, 0);
		gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
		add(bringoverCheckbox, gridBagConstraints1);

		selectionTabbedPane.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(1, 1, 1, 1)));
		fileDirsPanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints3;

		selectionTypePanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints4;

		selectionTypePanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(1, 1, 1, 1)));
		listLabel.setText("List");
		gridBagConstraints4 = new java.awt.GridBagConstraints();
		gridBagConstraints4.gridx = 0;
		gridBagConstraints4.gridy = 0;
		gridBagConstraints4.ipadx = 2;
		gridBagConstraints4.insets = new java.awt.Insets(0, 30, 0, 0);
		gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
		selectionTypePanel.add(listLabel, gridBagConstraints4);

		entireWsRB.setText("Entire Workspace");
		listButtonGroup.add(entireWsRB);
		entireWsRB.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				entireWsRBItemStateChanged(evt);
			}
		});

		gridBagConstraints4 = new java.awt.GridBagConstraints();
		gridBagConstraints4.gridx = 1;
		gridBagConstraints4.gridy = 0;
		gridBagConstraints4.gridwidth = 5;
		gridBagConstraints4.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints4.insets = new java.awt.Insets(0, 3, 0, 0);
		gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
		selectionTypePanel.add(entireWsRB, gridBagConstraints4);

		selectedFilesRB.setText("Selected files & Directories");
		listButtonGroup.add(selectedFilesRB);
		selectedFilesRB
				.addChangeListener(new javax.swing.event.ChangeListener() {
					public void stateChanged(javax.swing.event.ChangeEvent evt) {
						selectedFilesRBStateChanged(evt);
					}
				});

		selectedFilesRB.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				selectedFilesRBItemStateChanged(evt);
			}
		});

		gridBagConstraints4 = new java.awt.GridBagConstraints();
		gridBagConstraints4.gridx = 1;
		gridBagConstraints4.gridy = 1;
		gridBagConstraints4.gridwidth = 5;
		gridBagConstraints4.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints4.insets = new java.awt.Insets(0, 3, 0, 0);
		gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
		selectionTypePanel.add(selectedFilesRB, gridBagConstraints4);

		gridBagConstraints3 = new java.awt.GridBagConstraints();
		gridBagConstraints3.gridx = 0;
		gridBagConstraints3.gridy = 0;
		gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
		fileDirsPanel.add(selectionTypePanel, gridBagConstraints3);

		fileListPanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints5;

		fileListPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(1, 1, 0, 1)));
		treeScrollPane.setPreferredSize(new java.awt.Dimension(355, 250));
		treeScrollPane.setMinimumSize(new java.awt.Dimension(250, 250));
		gridBagConstraints5 = new java.awt.GridBagConstraints();
		gridBagConstraints5.gridx = 2;
		gridBagConstraints5.gridy = 4;
		gridBagConstraints5.gridwidth = 6;
		gridBagConstraints5.gridheight = 5;
		gridBagConstraints5.ipadx = 3;
		gridBagConstraints5.insets = new java.awt.Insets(0, 55, 0, 0);
		fileListPanel.add(treeScrollPane, gridBagConstraints5);

		saveListButton.setText("Save List");
		saveListButton
				.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
		saveListButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		saveListButton.setEnabled(false);
		saveListButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveListButtonActionPerformed(evt);
			}
		});

		gridBagConstraints5 = new java.awt.GridBagConstraints();
		gridBagConstraints5.gridx = 8;
		gridBagConstraints5.gridy = 6;
		gridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints5.insets = new java.awt.Insets(0, 4, 0, 0);
		fileListPanel.add(saveListButton, gridBagConstraints5);

		loadListButton.setText("Load List ...");
		loadListButton
				.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
		loadListButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		loadListButton.setEnabled(false);
		loadListButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				loadListButtonActionPerformed(evt);
			}
		});

		gridBagConstraints5 = new java.awt.GridBagConstraints();
		gridBagConstraints5.gridx = 8;
		gridBagConstraints5.gridy = 5;
		gridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints5.insets = new java.awt.Insets(0, 4, 0, 0);
		fileListPanel.add(loadListButton, gridBagConstraints5);

		showSelectedCB.setText("Show Selected Items only");
		showSelectedCB.setEnabled(false);
		showSelectedCB
				.addChangeListener(new javax.swing.event.ChangeListener() {
					public void stateChanged(javax.swing.event.ChangeEvent evt) {
						showSelectedCBStateChanged(evt);
					}
				});

		gridBagConstraints5 = new java.awt.GridBagConstraints();
		gridBagConstraints5.gridx = 2;
		gridBagConstraints5.gridy = 2;
		gridBagConstraints5.gridwidth = 6;
		gridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints5.insets = new java.awt.Insets(0, 65, 0, 0);
		fileListPanel.add(showSelectedCB, gridBagConstraints5);

		useListCB.setText("Use file list program ");
		useListCB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				useListCBStateChanged(evt);
			}
		});

		useListCB.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				useListCBItemStateChanged(evt);
			}
		});

		gridBagConstraints5 = new java.awt.GridBagConstraints();
		gridBagConstraints5.gridx = 2;
		gridBagConstraints5.gridy = 3;
		gridBagConstraints5.gridwidth = 6;
		gridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints5.ipadx = 10;
		gridBagConstraints5.insets = new java.awt.Insets(0, 65, 0, 0);
		fileListPanel.add(useListCB, gridBagConstraints5);

		gridBagConstraints3 = new java.awt.GridBagConstraints();
		gridBagConstraints3.gridx = 0;
		gridBagConstraints3.gridy = 1;
		gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
		fileDirsPanel.add(fileListPanel, gridBagConstraints3);

		commentPanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints6;

		commentPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(0, 1, 1, 1)));
		commentTextArea.setColumns(45);
		commentTextArea.setRows(5);
		commentTextArea.setBorder(new javax.swing.border.EtchedBorder());
		gridBagConstraints6 = new java.awt.GridBagConstraints();
		gridBagConstraints6.gridx = 2;
		gridBagConstraints6.gridy = 5;
		gridBagConstraints6.gridwidth = 6;
		gridBagConstraints6.gridheight = 3;
		gridBagConstraints6.insets = new java.awt.Insets(0, 10, 0, 0);
		gridBagConstraints6.anchor = java.awt.GridBagConstraints.WEST;
		commentPanel.add(commentTextArea, gridBagConstraints6);

		commentLabel.setText("Comment");
		gridBagConstraints6 = new java.awt.GridBagConstraints();
		gridBagConstraints6.gridx = 0;
		gridBagConstraints6.gridy = 5;
		gridBagConstraints6.gridwidth = 2;
		commentPanel.add(commentLabel, gridBagConstraints6);

		gridBagConstraints3 = new java.awt.GridBagConstraints();
		gridBagConstraints3.gridx = 0;
		gridBagConstraints3.gridy = 2;
		gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
		fileDirsPanel.add(commentPanel, gridBagConstraints3);

		selectionTabbedPane.addTab("File Selection", fileDirsPanel);

		optionsPanel.setLayout(new java.awt.GridLayout(1, 2));

		leftPanel.setLayout(new java.awt.GridBagLayout());
		java.awt.GridBagConstraints gridBagConstraints7;

		leftPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(1, 1, 1, 1)));
		optonsLabel.setText("Options:");
		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 0;
		gridBagConstraints7.gridy = 0;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints7.insets = new java.awt.Insets(0, 0, 0, 4);
		leftPanel.add(optonsLabel, gridBagConstraints7);

		skipBakCB.setText("Skip Backup Step (Can't Undo)");
		skipBakCB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				skipBakCBStateChanged(evt);
			}
		});

		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 0;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		leftPanel.add(skipBakCB, gridBagConstraints7);

		skipGetsCB.setText("Skip SCCS gets");
		skipGetsCB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				skipGetsCBStateChanged(evt);
			}
		});

		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 1;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		leftPanel.add(skipGetsCB, gridBagConstraints7);

		treatConfCB.setText("Treat all updates as conflicts");
		treatConfCB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				treatConfCBStateChanged(evt);
			}
		});

		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 2;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		leftPanel.add(treatConfCB, gridBagConstraints7);

		outputModeLabel.setText("Output Mode");
		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 0;
		gridBagConstraints7.gridy = 3;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints7.insets = new java.awt.Insets(15, 0, 0, 5);
		leftPanel.add(outputModeLabel, gridBagConstraints7);

		normalOutRB.setText("Normal");
		outputModeButtongroup.add(normalOutRB);
		normalOutRB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				normalOutRBStateChanged(evt);
			}
		});

		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 3;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints7.insets = new java.awt.Insets(15, 0, 0, 0);
		leftPanel.add(normalOutRB, gridBagConstraints7);

		verbodeOutRB.setText("Verbose");
		outputModeButtongroup.add(verbodeOutRB);
		verbodeOutRB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				verbodeOutRBStateChanged(evt);
			}
		});

		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 4;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		leftPanel.add(verbodeOutRB, gridBagConstraints7);

		quietOutRB.setText("Quiet");
		outputModeButtongroup.add(quietOutRB);
		quietOutRB.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				quietOutRBStateChanged(evt);
			}
		});

		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 5;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		leftPanel.add(quietOutRB, gridBagConstraints7);

		deltaInfoCB.setText("Show Additional Delta Info");
		gridBagConstraints7 = new java.awt.GridBagConstraints();
		gridBagConstraints7.gridx = 1;
		gridBagConstraints7.gridy = 6;
		gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
		leftPanel.add(deltaInfoCB, gridBagConstraints7);

		optionsPanel.add(leftPanel);

		optionsPanel.add(rightPanel);

		selectionTabbedPane.addTab("Options", optionsPanel);

		gridBagConstraints1 = new java.awt.GridBagConstraints();
		gridBagConstraints1.gridx = 0;
		gridBagConstraints1.gridy = 2;
		gridBagConstraints1.gridwidth = 8;
		gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints1.insets = new java.awt.Insets(10, 0, 0, 0);
		gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
		add(selectionTabbedPane, gridBagConstraints1);

	}// GEN-END:initComponents

	private void useListCBItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_useListCBItemStateChanged
		switch (evt.getStateChange()) {
		case java.awt.event.ItemEvent.SELECTED:
			loadListButton.setVisible(true);
			saveListButton.setVisible(true);
			// setPreferredSize(new java.awt.Dimension(575, 625));
			break;
		case java.awt.event.ItemEvent.DESELECTED:
			loadListButton.setVisible(false);
			saveListButton.setVisible(false);
			// setPreferredSize(new java.awt.Dimension(575, 150));
			break;
		}
		packParent();
	}// GEN-LAST:event_useListCBItemStateChanged

	private void selectedFilesRBItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_selectedFilesRBItemStateChanged
		if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
			selectionType = SELECTED_FILES;
			fileListPanel.setVisible(true);
			packParent();
		}
	}// GEN-LAST:event_selectedFilesRBItemStateChanged

	private void entireWsRBItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_entireWsRBItemStateChanged
		if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
			selectionType = ENTIRE_WORKSPACE;
			fileListPanel.setVisible(false);
			packParent();
		}
	}// GEN-LAST:event_entireWsRBItemStateChanged

	private void bringoverCheckboxActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bringoverCheckboxActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_bringoverCheckboxActionPerformed

	private void bringoverCheckboxItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_bringoverCheckboxItemStateChanged
		// Add your handling code here:

		switch (evt.getStateChange()) {
		case java.awt.event.ItemEvent.SELECTED:
			selectionTabbedPane.setVisible(true);
			// setPreferredSize(new java.awt.Dimension(575, 625));
			break;
		case java.awt.event.ItemEvent.DESELECTED:
			selectionTabbedPane.setVisible(false);
			// setPreferredSize(new java.awt.Dimension(575, 150));
			break;

		}
		packParent();
	}// GEN-LAST:event_bringoverCheckboxItemStateChanged

	public void packParent() {
		if (parentDialog == null) {
			Container parent = this.getParent();
			while (parent != null) {
				if (parent instanceof JDialog)
					break;
				parent = parent.getParent();
			}
			if (parent != null) {
				parentDialog = (JDialog) parent;
				parentDialog.pack();
			}
		} else {
			parentDialog.pack();
		}
	}

	private void quietOutRBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_quietOutRBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_quietOutRBStateChanged

	private void verbodeOutRBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_verbodeOutRBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_verbodeOutRBStateChanged

	private void normalOutRBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_normalOutRBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_normalOutRBStateChanged

	private void treatConfCBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_treatConfCBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_treatConfCBStateChanged

	private void skipGetsCBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_skipGetsCBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_skipGetsCBStateChanged

	private void skipBakCBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_skipBakCBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_skipBakCBStateChanged

	private void loadListButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_loadListButtonActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_loadListButtonActionPerformed

	private void saveListButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveListButtonActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_saveListButtonActionPerformed

	private void useListCBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_useListCBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_useListCBStateChanged

	private void showSelectedCBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_showSelectedCBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_showSelectedCBStateChanged

	private void selectedFilesRBStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_selectedFilesRBStateChanged
		// Add your handling code here:
	}// GEN-LAST:event_selectedFilesRBStateChanged

	private void txtDirFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtDirFocusLost
		// Add your handling code here:
	}// GEN-LAST:event_txtDirFocusLost

	private void txtDirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtDirActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_txtDirActionPerformed

	private void txtParentFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtParentFocusLost
		// Add your handling code here:
	}// GEN-LAST:event_txtParentFocusLost

	private void txtChildFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtChildFocusLost
		// Add your handling code here:
	}// GEN-LAST:event_txtChildFocusLost

	private void txtChildActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtChildActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_txtChildActionPerformed

	private void btnBrowseDirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBrowseDirActionPerformed
		Runnable runnable = new Runnable() {
			public void run() {
				TwFileChooser chooser = new TwFileChooser();
				chooser.setType(TwFileChooser.DIRECTORY_CHOOSER);
				chooser.show();
				if (chooser.getSelection() != null) {
					txtDir.setText(chooser.getSelection().getAbsolutePath());
				}
			}
		};

		Thread thr = new Thread(runnable);
		thr.start();
	}// GEN-LAST:event_btnBrowseDirActionPerformed

	private void btnBrowseChildActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBrowseChildActionPerformed
		Runnable runnable = new Runnable() {
			public void run() {
				TwFileChooser chooser = new TwFileChooser();
				chooser.setType(TwFileChooser.WORKSPACE_CHOOSER);
				chooser.show();
				if (chooser.getSelection() != null) {
					txtChild.setText(chooser.getSelection().getAbsolutePath());
				}
			}
		};

		Thread thr = new Thread(runnable);
		thr.start();
	}// GEN-LAST:event_btnBrowseChildActionPerformed

	private void btnBrowseParentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBrowseParentActionPerformed
		Runnable runnable = new Runnable() {
			public void run() {
				TwFileChooser chooser = new TwFileChooser();
				chooser.setType(TwFileChooser.WORKSPACE_CHOOSER);
				chooser.show();
				if (chooser.getSelection() != null) {
					txtParent.setText(chooser.getSelection().getAbsolutePath());
				}
			}
		};

		Thread thr = new Thread(runnable);
		thr.start();
	}// GEN-LAST:event_btnBrowseParentActionPerformed

	private void txtParentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtParentActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_txtParentActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.ButtonGroup listButtonGroup;
	private javax.swing.ButtonGroup outputModeButtongroup;
	private javax.swing.ButtonGroup buttonGroup3;
	private javax.swing.JPanel workspacePanel;
	private javax.swing.JLabel lblParent;
	private javax.swing.JTextField txtParent;
	private javax.swing.JButton btnBrowseParent;
	private javax.swing.JLabel lblChild;
	private javax.swing.JTextField txtChild;
	private javax.swing.JButton btnBrowseChild;
	private javax.swing.JLabel lblDir;
	private javax.swing.JTextField txtDir;
	private javax.swing.JButton btnBrowseDir;
	private javax.swing.JCheckBox bringoverCheckbox;
	private javax.swing.JTabbedPane selectionTabbedPane;
	private javax.swing.JPanel fileDirsPanel;
	private javax.swing.JPanel selectionTypePanel;
	private javax.swing.JLabel listLabel;
	private javax.swing.JRadioButton entireWsRB;
	private javax.swing.JRadioButton selectedFilesRB;
	private javax.swing.JPanel fileListPanel;
	private javax.swing.JScrollPane treeScrollPane;
	private javax.swing.JButton saveListButton;
	private javax.swing.JButton loadListButton;
	private javax.swing.JCheckBox showSelectedCB;
	private javax.swing.JCheckBox useListCB;
	private javax.swing.JPanel commentPanel;
	private javax.swing.JTextArea commentTextArea;
	private javax.swing.JLabel commentLabel;
	private javax.swing.JPanel optionsPanel;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JLabel optonsLabel;
	private javax.swing.JCheckBox skipBakCB;
	private javax.swing.JCheckBox skipGetsCB;
	private javax.swing.JCheckBox treatConfCB;
	private javax.swing.JLabel outputModeLabel;
	private javax.swing.JRadioButton normalOutRB;
	private javax.swing.JRadioButton verbodeOutRB;
	private javax.swing.JRadioButton quietOutRB;
	private javax.swing.JCheckBox deltaInfoCB;
	private javax.swing.JPanel rightPanel;

	// End of variables declaration//GEN-END:variables
	public static void main(String[] args) {
		TwActionDialog actionDialog = new TwActionDialog(new JFrame(), true);
		TwTransactionPanel trPanel = new TwTransactionPanel(
				TwTransactionPanel.BRINGOVER_UPDATE);
		trPanel.setWorkspace(new com.nayaware.twproto.dataobjects.TwWorkspaceObject(
				"C:\\Test\\ws2"));
		actionDialog.setUserPanel(trPanel);
		actionDialog.show();
		System.out.println(trPanel.getSelection());
	}
}
